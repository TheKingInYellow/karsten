#!/usr/bin/python
"""
Plotting tool for meshes, point particles and particle tracks generated by
telemac-parse, prepmesh, floaters etc

Will plot 2D or 3D meshes, with or without point particle locations and tracks
Paths taken from .ini file used with prepmesh/floaters
"""

import argparse

cmdparser = argparse.ArgumentParser(description="Plot 2D or 3D meshes, particle positions and particle tracks")
cmdparser.add_argument("config", help="Case/Settings file used with floaters/prepmesh")
cmdparser.add_argument("-o", "--output", action="store", default=None, dest="output_file", help="Output to file foo. Format based on file extension", metavar="foo")

meshopts = cmdparser.add_mutually_exclusive_group()
meshopts.add_argument("-m", "--show-mesh", default=True, action="store_true", dest="mesh", help="Show mesh")
meshopts.add_argument("-nm", "--hide-mesh", action="store_false", dest="mesh", help="Hide mesh")
meshopts.add_argument("-#", "--show-ids", action="store_true", dest="meshids", help="Plot mesh with node IDs")

partopts = cmdparser.add_mutually_exclusive_group()
partopts.add_argument("-p", "--show-particles", default=False, action="store_true", dest="particles", help="Show initial particle positions")
partopts.add_argument("-np", "--hide-particles", action="store_false", dest="particles", help="Hide initial particle positions")

trackopts = cmdparser.add_mutually_exclusive_group()
trackopts.add_argument("-t", "--show-tracks", default=False, action="store_true", dest="tracks", help="Show particle tracks")
trackopts.add_argument("-nt", "--hide-tracks", action="store_false", dest="tracks", help="Hide particle tracks")

args = cmdparser.parse_args()

from CaseSettings import CaseSettings
from ParticleFile import ParticleFile
from PlotFunctions import *

conf = CaseSettings(args.config)
particles = ParticleFile(conf.particlefile)

from matplotlib import pyplot
if not args.output_file:
    pyplot.ion()

if conf.mode == 2:
    a = None
    if args.mesh:
        a = plot_mesh_2D(conf, axes=a)
        if args.meshids:
            a = plot_ids_2D(conf, axes=a)
    if args.tracks:
        a = plot_tracks_2D(conf, axes=a)
    if args.particles:
        a = plot_particles_2D(conf, axes=a, pfile=particles)
elif conf.mode == 3:
    a = None
    if args.mesh:
        a = plot_mesh_3D(conf, axes=a)
        if args.meshids:
            a = plot_ids_3D(conf, axes=a)
    if args.tracks:
        a = plot_tracks_3D(conf, axes=a)
    if args.particles:
        a = plot_particles_3D(conf, axes=a, pfile=particles)

if args.output_file:
    pyplot.savefig(args.output_file)
else:
    pyplot.show(block=True)

